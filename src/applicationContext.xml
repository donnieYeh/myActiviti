<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		                    http://www.springframework.org/schema/context 
		                    http://www.springframework.org/schema/context/spring-context-3.0.xsd
		                    http://www.springframework.org/schema/tx 
		                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		                    http://www.springframework.org/schema/aop 
		                    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 自动扫描Spring注解配置 -->
	<context:component-scan base-package="com.yejf.business" />

	<!-- 配置外部数据库连接信息 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 使用注解配置 -->
	<context:annotation-config />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<!-- 连接Idle一个小时后超时 -->
	</bean>

	<!-- 创建SessionFactory，这是spring整合hibernate的核心 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 1.配置datasource -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 2.配置Hibernate属性 -->
		<property name="hibernateProperties">
			<!-- <value> hibernate.hbm2ddl.auto=create hibernate.show_sql=true hibernate.dialect=org.hibernate.dialect.MySQL5Dialect 
				</value> -->
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			</props>
		</property>
		<!-- 3.配置映射文件 -->
		<property name="packagesToScan" value="com.yejf.*.entity" />
	</bean>

	<!-- 配置事务 -->
	<!-- 1.配置事务管理器 -->
	<bean id="transManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 2.配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transManager">
		<tx:attributes>
			<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
			<tx:method name="create*" isolation="DEFAULT" propagation="REQUIRED" read-only="false" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 3.配置切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com..*.service..*.*(..))" id="aopPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aopPointcut" />
	</aop:config>

	<!-- 导入相关配置 -->
	<import resource="classpath:activiti-context.xml" />


	<!-- 下面三个Bean的配置可有可无，但配置后用处更大，通常用于BaseDao类、其他Dao类或特殊工具类中 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="hibernateDaoSupport" class="org.springframework.orm.hibernate4.support.HibernateDaoSupport"
		abstract="true">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="sessionFactoryUtils" class="org.springframework.orm.hibernate4.SessionFactoryUtils"
		abstract="true" />

</beans>                    